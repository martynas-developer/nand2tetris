// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=register1, b=register2, c=register3, d=register4, e=register5, f=register6, g=register7, h=register8);
	Register (in=in, load=register1, out=register11);
	Register (in=in, load=register2, out=register22);
	Register (in=in, load=register3, out=register33);
	Register (in=in, load=register4, out=register44);
	Register (in=in, load=register5, out=register55);
	Register (in=in, load=register6, out=register66);
	Register (in=in, load=register7, out=register77);
	Register (in=in, load=register8, out=register88);
	Mux8Way16 (a=register11, b=register22, c=register33, d=register44, e=register55, f=register66, g=register77, h=register88, sel=address, out=out);
}