// push argument 1
@12345
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 1
@12345
@4
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@R13
M=0
// push constant 0
@12345
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop that 0
@12345
@0
D=A
@THAT
D=M+D
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@R13
M=0
// push constant 1
@12345
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop that 1
@12345
@1
D=A
@THAT
D=M+D
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@R13
M=0
// push argument 0
@12345
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@12345
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@543
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=M-D
@SP
M=M+1
// pop argument 0
@12345
@0
D=A
@ARG
D=M+D
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@R13
M=0
// label MAIN_LOOP_START
@111
(MAIN_LOOP_START)
// push argument 0
@12345
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// if COMPUTE_ELEMENT
@333
@SP
M=M-1
@SP
A=M
M=D
@COMPUTE_ELEMENT
D;JGT
// goto END_PROGRAM
@222
@END_PROGRAM
0;JMP
// label COMPUTE_ELEMENT
@111
(COMPUTE_ELEMENT)
// push that 0
@12345
@0
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// push that 1
@12345
@1
D=A
@THAT
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@543
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=D+M
@SP
M=M+1
// pop that 2
@12345
@2
D=A
@THAT
D=M+D
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@R13
M=0
// push pointer 1
@12345
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@12345
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@543
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=D+M
@SP
M=M+1
// pop pointer 1
@12345
@4
D=A
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@R13
M=0
// push argument 0
@12345
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@12345
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@543
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=M-D
@SP
M=M+1
// pop argument 0
@12345
@0
D=A
@ARG
D=M+D
@R13
M=D
@SP
M=M-1
@SP
A=M
D=M
@R13
A=M
M=D
@R13
M=0
// goto MAIN_LOOP_START
@222
@MAIN_LOOP_START
0;JMP
// label END_PROGRAM
@111
(END_PROGRAM)
// Terminate
(END)
@END
0;JMP