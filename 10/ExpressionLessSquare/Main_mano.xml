<class>
    <keyword>class</keyword>
    <indentifier>Main</indentifier>
    <symbol>{</symbol>
    <classVarDec>
        <keyword>static</keyword>
        <identifier>boolean</identifier>
        <identifier>test</identifier>
        <symbol>;</symbol>
    </classVarDec>
    <subroutineDec>
        <keyword>function</keyword>
        <keyword>void</keyword>
        <indentifier>main</indentifier>
        <symbol>(</symbol>
        <parameterList>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <varDec>
                <keyword>var</keyword>
                <identifier>SquareGame</identifier>
                <identifier>game</identifier>
                <symbol>;</symbol>
            </varDec>
            <statements>
                <letStatment>
                    <keyword>let</keyword>
                    <identifier>game</identifier>
                    <symbol>=</symbol>
                    <expression>
                        <term>
                            <identifier>game</identifier>
                        </term>
                    </expression>
                    <symbol>;</symbol>
                </letStatment>
                <doStatement>
                    <keyword>do</keyword>
                    <identifier>game</identifier>
                    <symbol>.</symbol>
                    <identifier>run</identifier>
                    <symbol>(</symbol>
                    <expressionList>
                    </expressionList>
                    <symbol>)</symbol>
                    <symbol>;</symbol>
                </doStatement>
                <doStatement>
                    <keyword>do</keyword>
                    <identifier>game</identifier>
                    <symbol>.</symbol>
                    <identifier>dispose</identifier>
                    <symbol>(</symbol>
                    <expressionList>
                    </expressionList>
                    <symbol>)</symbol>
                    <symbol>;</symbol>
                </doStatement>
                <returnStatement>
                    <keyword>return</keyword>
                    <symbol>;</symbol>
                </returnStatement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword>function</keyword>
        <keyword>void</keyword>
        <indentifier>test</indentifier>
        <symbol>(</symbol>
        <parameterList>
        </parameterList>
        <symbol>)</symbol>
        <subroutineBody>
            <symbol>{</symbol>
            <varDec>
                <keyword>var</keyword>
                <identifier>int</identifier>
                <identifier>i</identifier>
                <symbol>,</symbol>
                <identifier>j</identifier>
                <symbol>;</symbol>
            </varDec>
            <varDec>
                <keyword>var</keyword>
                <identifier>String</identifier>
                <identifier>s</identifier>
                <symbol>;</symbol>
            </varDec>
            <varDec>
                <keyword>var</keyword>
                <identifier>Array</identifier>
                <identifier>a</identifier>
                <symbol>;</symbol>
            </varDec>
            <statements>
                <ifStatement>
                    <keyword>if</keyword>
                    <symbol>(</symbol>
                    <expression>
                        <term>
                            <identifier>i</identifier>
                        </term>
                    </expression>
                    <symbol>)</symbol>
                    <symbol>{</symbol>
                    <statements>
                        <letStatment>
                            <keyword>let</keyword>
                            <identifier>s</identifier>
                            <symbol>=</symbol>
                            <expression>
                                <term>
                                    <identifier>i</identifier>
                                </term>
                            </expression>
                            <symbol>;</symbol>
                        </letStatment>
                        <letStatment>
                            <keyword>let</keyword>
                            <identifier>s</identifier>
                            <symbol>=</symbol>
                            <expression>
                                <term>
                                    <identifier>j</identifier>
                                </term>
                            </expression>
                            <symbol>;</symbol>
                        </letStatment>
                        <letStatment>
                            <keyword>let</keyword>
                            <identifier>a</identifier>
                            <symbol>[</symbol>
                            <expression>
                                <term>
                                    <identifier>i</identifier>
                                </term>
                            </expression>
                            <symbol>]</symbol>
                            <symbol>=</symbol>
                            <expression>
                                <term>
                                    <identifier>j</identifier>
                                </term>
                            </expression>
                            <symbol>;</symbol>
                        </letStatment>
                    </statements>
                    <symbol>}</symbol>
                    <keyword>else</keyword>
                    <symbol>{</symbol>
                    <statements>
                        <letStatment>
                            <keyword>let</keyword>
                            <identifier>i</identifier>
                            <symbol>=</symbol>
                            <expression>
                                <term>
                                    <identifier>i</identifier>
                                </term>
                            </expression>
                            <symbol>;</symbol>
                        </letStatment>
                        <letStatment>
                            <keyword>let</keyword>
                            <identifier>j</identifier>
                            <symbol>=</symbol>
                            <expression>
                                <term>
                                    <identifier>j</identifier>
                                </term>
                            </expression>
                            <symbol>;</symbol>
                        </letStatment>
                        <letStatment>
                            <keyword>let</keyword>
                            <identifier>i</identifier>
                            <symbol>=</symbol>
                            <expression>
                                <term>
                                    <identifier>i</identifier>
                                </term>
                                <symbol>|</symbol>
                                <term>
                                    <identifier>j</identifier>
                                </term>
                            </expression>
                            <symbol>;</symbol>
                        </letStatment>
                    </statements>
                    <symbol>}</symbol>
                </ifStatement>
                <returnStatement>
                    <keyword>return</keyword>
                    <symbol>;</symbol>
                </returnStatement>
            </statements>
            <symbol>}</symbol>
        </subroutineBody>
    </subroutineDec>
    <symbol>}</symbol>
</class>